email {
  server = "smtp.exmail.qq.com"
  server = ${?EMAIL_SERVER}
  port = 465
  port = ${?EMAIL_PORT}
  sender = "colin@freeriver.club"
  sender = ${?EMAIL_SENDER}
  password = "PZMdmK82mNxGc8X2"
  password = ${?EMAIL_PASSWORD}
}

akka {
  actor {
    provider = "cluster"
    serialize-messages = on
    serialization-bindings {
      "actors.JacksonJsonSerializable" = jackson-json
      "actors.JacksonCborSerializable" = jackson-cbor
    }
    custom {
      mailbox {
        email-sender-bounded-stable-priority {
          mailbox-type = "actors.EmailSenderBehavior.MessageQueue"
        }
      }
    }
  }
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
    cassandra {
      journal {
        keyspace = "messages_service_akka_journal"
      }
      snapshot {
        keyspace = "messages_service_akka_snapshot"
      }
    }
  }
  cluster {
    seed-nodes = ["akka://messages-service@localhost:2551"]
    seed-nodes = ${?SEED_NODES}
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver {
      active-strategy = keep-majority
      stable-after = 20s
      down-all-when-unstable = on
      keep-majority {
        # if the 'role' is defined the decision is based only on members with that 'role'
        role = ""
      }
    }
    sharding {
      number-of-shards = 60
      passivate-idle-entity-after = 10m
      least-shard-allocation-strategy.rebalance-relative-limit = 0.1
    }
  }
  remote.artery {
    canonical {
      hostname = localhost
      hostname = ${?HOST_NAME}
      port = 2551
    }
  }
  projection.cassandra {
    offset-store {
      keyspace = "messages_service_akka_projection"
      table = "offset_store"
    }
    session-config-path = "akka.persistence.cassandra"
  }
}

datastax-java-driver {
  advanced {
    reconnect-on-init = true
    protocol.version = V4
  }
  basic {
    contact-points = ["localhost:9042"]
    contact-points = ${?CASSANDRA_CONTRACT_POINTS}
    load-balancing-policy.local-datacenter = "datacenter1"
  }
}

server.port = 80
